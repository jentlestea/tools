# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import dist_pb2 as dist__pb2


class distStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.distSelect = channel.unary_unary(
                '/dist/distSelect',
                request_serializer=dist__pb2.UsrMsg.SerializeToString,
                response_deserializer=dist__pb2.Select.FromString,
                )
        self.distCancel = channel.unary_unary(
                '/dist/distCancel',
                request_serializer=dist__pb2.UsrMsg.SerializeToString,
                response_deserializer=dist__pb2.Result.FromString,
                )
        self.distShow = channel.unary_stream(
                '/dist/distShow',
                request_serializer=dist__pb2.UsrShow.SerializeToString,
                response_deserializer=dist__pb2.Show.FromString,
                )
        self.distHistory = channel.unary_unary(
                '/dist/distHistory',
                request_serializer=dist__pb2.Usr.SerializeToString,
                response_deserializer=dist__pb2.History.FromString,
                )
        self.distComment = channel.unary_unary(
                '/dist/distComment',
                request_serializer=dist__pb2.QComt.SerializeToString,
                response_deserializer=dist__pb2.Result.FromString,
                )


class distServicer(object):
    """Missing associated documentation comment in .proto file."""

    def distSelect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def distCancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def distShow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def distHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def distComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_distServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'distSelect': grpc.unary_unary_rpc_method_handler(
                    servicer.distSelect,
                    request_deserializer=dist__pb2.UsrMsg.FromString,
                    response_serializer=dist__pb2.Select.SerializeToString,
            ),
            'distCancel': grpc.unary_unary_rpc_method_handler(
                    servicer.distCancel,
                    request_deserializer=dist__pb2.UsrMsg.FromString,
                    response_serializer=dist__pb2.Result.SerializeToString,
            ),
            'distShow': grpc.unary_stream_rpc_method_handler(
                    servicer.distShow,
                    request_deserializer=dist__pb2.UsrShow.FromString,
                    response_serializer=dist__pb2.Show.SerializeToString,
            ),
            'distHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.distHistory,
                    request_deserializer=dist__pb2.Usr.FromString,
                    response_serializer=dist__pb2.History.SerializeToString,
            ),
            'distComment': grpc.unary_unary_rpc_method_handler(
                    servicer.distComment,
                    request_deserializer=dist__pb2.QComt.FromString,
                    response_serializer=dist__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dist', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class dist(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def distSelect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dist/distSelect',
            dist__pb2.UsrMsg.SerializeToString,
            dist__pb2.Select.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def distCancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dist/distCancel',
            dist__pb2.UsrMsg.SerializeToString,
            dist__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def distShow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/dist/distShow',
            dist__pb2.UsrShow.SerializeToString,
            dist__pb2.Show.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def distHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dist/distHistory',
            dist__pb2.Usr.SerializeToString,
            dist__pb2.History.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def distComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dist/distComment',
            dist__pb2.QComt.SerializeToString,
            dist__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
